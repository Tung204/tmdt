@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    
        <div class="header-user-actions">
            <button class="action-btn">
                <ion-icon name="heart-outline"></ion-icon>
                <span class="count">0</span>
            </button>

            <button class="action-btn">
                <ion-icon name="bag-handle-outline"></ion-icon>
                <span class="count">0</span>
            </button>

            <a class="action-btn" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <ion-icon name="person-outline"></ion-icon>
            </a>

            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </div>
}
else
{
        <div class="header-user-actions">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </div>
}
</ul>
